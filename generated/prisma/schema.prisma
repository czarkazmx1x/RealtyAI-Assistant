// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int          @id @default(autoincrement())
  email    String       @unique
  name     String?
  password String
  listings Listing[]
  tasks    Task[]
  posts    SocialPost[]
}

model Listing {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  address     String
  price       Float
  description String
  status      String   @default("AVAILABLE")
  imageUrls   String?
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     Int
}

model Lead {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String   @unique
  phone     String?
  source    String?
  status    String   @default("NEW")
  score     Int      @default(0)
}

model Task {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  description String
  dueDate     DateTime?
  completed   Boolean   @default(false)
  assignee    User?     @relation(fields: [assigneeId], references: [id])
  assigneeId  Int?
}

model SocialPost {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String
  platform  String   @default("Nextdoor")
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  type      String
  details   String
}
